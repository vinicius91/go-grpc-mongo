// Code generated by protoc-gen-go. DO NOT EDIT.
// source: blogpb/blog.proto

/*
Package blogpb is a generated protocol buffer package.

It is generated from these files:
	blogpb/blog.proto

It has these top-level messages:
	Blog
	CreteBlogRequest
	CreateBlogResponse
	ReadBlogRequest
	ReadBlogResponse
*/
package blogpb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Blog struct {
	Id       string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	AuthorId string `protobuf:"bytes,2,opt,name=author_id,json=authorId" json:"author_id,omitempty"`
	Title    string `protobuf:"bytes,3,opt,name=title" json:"title,omitempty"`
	Content  string `protobuf:"bytes,4,opt,name=content" json:"content,omitempty"`
}

func (m *Blog) Reset()                    { *m = Blog{} }
func (m *Blog) String() string            { return proto.CompactTextString(m) }
func (*Blog) ProtoMessage()               {}
func (*Blog) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Blog) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Blog) GetAuthorId() string {
	if m != nil {
		return m.AuthorId
	}
	return ""
}

func (m *Blog) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Blog) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

type CreteBlogRequest struct {
	Blog *Blog `protobuf:"bytes,1,opt,name=blog" json:"blog,omitempty"`
}

func (m *CreteBlogRequest) Reset()                    { *m = CreteBlogRequest{} }
func (m *CreteBlogRequest) String() string            { return proto.CompactTextString(m) }
func (*CreteBlogRequest) ProtoMessage()               {}
func (*CreteBlogRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *CreteBlogRequest) GetBlog() *Blog {
	if m != nil {
		return m.Blog
	}
	return nil
}

type CreateBlogResponse struct {
	Blog *Blog `protobuf:"bytes,1,opt,name=blog" json:"blog,omitempty"`
}

func (m *CreateBlogResponse) Reset()                    { *m = CreateBlogResponse{} }
func (m *CreateBlogResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateBlogResponse) ProtoMessage()               {}
func (*CreateBlogResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *CreateBlogResponse) GetBlog() *Blog {
	if m != nil {
		return m.Blog
	}
	return nil
}

type ReadBlogRequest struct {
	BlogId string `protobuf:"bytes,1,opt,name=blog_id,json=blogId" json:"blog_id,omitempty"`
}

func (m *ReadBlogRequest) Reset()                    { *m = ReadBlogRequest{} }
func (m *ReadBlogRequest) String() string            { return proto.CompactTextString(m) }
func (*ReadBlogRequest) ProtoMessage()               {}
func (*ReadBlogRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ReadBlogRequest) GetBlogId() string {
	if m != nil {
		return m.BlogId
	}
	return ""
}

type ReadBlogResponse struct {
	Blog *Blog `protobuf:"bytes,1,opt,name=blog" json:"blog,omitempty"`
}

func (m *ReadBlogResponse) Reset()                    { *m = ReadBlogResponse{} }
func (m *ReadBlogResponse) String() string            { return proto.CompactTextString(m) }
func (*ReadBlogResponse) ProtoMessage()               {}
func (*ReadBlogResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ReadBlogResponse) GetBlog() *Blog {
	if m != nil {
		return m.Blog
	}
	return nil
}

func init() {
	proto.RegisterType((*Blog)(nil), "blog.Blog")
	proto.RegisterType((*CreteBlogRequest)(nil), "blog.CreteBlogRequest")
	proto.RegisterType((*CreateBlogResponse)(nil), "blog.CreateBlogResponse")
	proto.RegisterType((*ReadBlogRequest)(nil), "blog.ReadBlogRequest")
	proto.RegisterType((*ReadBlogResponse)(nil), "blog.ReadBlogResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for BlogService service

type BlogServiceClient interface {
	CreateBlog(ctx context.Context, in *CreteBlogRequest, opts ...grpc.CallOption) (*CreateBlogResponse, error)
	ReadBlog(ctx context.Context, in *ReadBlogRequest, opts ...grpc.CallOption) (*ReadBlogResponse, error)
}

type blogServiceClient struct {
	cc *grpc.ClientConn
}

func NewBlogServiceClient(cc *grpc.ClientConn) BlogServiceClient {
	return &blogServiceClient{cc}
}

func (c *blogServiceClient) CreateBlog(ctx context.Context, in *CreteBlogRequest, opts ...grpc.CallOption) (*CreateBlogResponse, error) {
	out := new(CreateBlogResponse)
	err := grpc.Invoke(ctx, "/blog.BlogService/CreateBlog", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blogServiceClient) ReadBlog(ctx context.Context, in *ReadBlogRequest, opts ...grpc.CallOption) (*ReadBlogResponse, error) {
	out := new(ReadBlogResponse)
	err := grpc.Invoke(ctx, "/blog.BlogService/ReadBlog", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for BlogService service

type BlogServiceServer interface {
	CreateBlog(context.Context, *CreteBlogRequest) (*CreateBlogResponse, error)
	ReadBlog(context.Context, *ReadBlogRequest) (*ReadBlogResponse, error)
}

func RegisterBlogServiceServer(s *grpc.Server, srv BlogServiceServer) {
	s.RegisterService(&_BlogService_serviceDesc, srv)
}

func _BlogService_CreateBlog_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreteBlogRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlogServiceServer).CreateBlog(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blog.BlogService/CreateBlog",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlogServiceServer).CreateBlog(ctx, req.(*CreteBlogRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlogService_ReadBlog_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadBlogRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlogServiceServer).ReadBlog(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blog.BlogService/ReadBlog",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlogServiceServer).ReadBlog(ctx, req.(*ReadBlogRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _BlogService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "blog.BlogService",
	HandlerType: (*BlogServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateBlog",
			Handler:    _BlogService_CreateBlog_Handler,
		},
		{
			MethodName: "ReadBlog",
			Handler:    _BlogService_ReadBlog_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "blogpb/blog.proto",
}

func init() { proto.RegisterFile("blogpb/blog.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 263 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x91, 0x4f, 0x4b, 0xc3, 0x40,
	0x10, 0xc5, 0x49, 0x8c, 0x69, 0x3a, 0x05, 0xff, 0x0c, 0x5a, 0x97, 0x0a, 0x22, 0x3d, 0x89, 0x87,
	0x0a, 0xd1, 0x8b, 0x17, 0x0f, 0xed, 0xa9, 0xd7, 0x78, 0xf3, 0x52, 0x92, 0xec, 0x50, 0x17, 0x42,
	0x36, 0x6e, 0xb6, 0x7e, 0x06, 0x3f, 0xb6, 0xec, 0x2c, 0x69, 0x65, 0x2f, 0xf6, 0x94, 0xbc, 0x37,
	0x6f, 0x76, 0x7e, 0xc3, 0xc0, 0x65, 0xd5, 0xe8, 0x6d, 0x57, 0x3d, 0xb9, 0xcf, 0xa2, 0x33, 0xda,
	0x6a, 0x4c, 0xdc, 0xff, 0xbc, 0x86, 0x64, 0xd9, 0xe8, 0x2d, 0x9e, 0x41, 0xac, 0xa4, 0x88, 0xee,
	0xa3, 0x87, 0x71, 0x11, 0x2b, 0x89, 0xb7, 0x30, 0x2e, 0x77, 0xf6, 0x53, 0x9b, 0x8d, 0x92, 0x22,
	0x66, 0x3b, 0xf3, 0xc6, 0x5a, 0xe2, 0x15, 0x9c, 0x5a, 0x65, 0x1b, 0x12, 0x27, 0x5c, 0xf0, 0x02,
	0x05, 0x8c, 0x6a, 0xdd, 0x5a, 0x6a, 0xad, 0x48, 0xd8, 0x1f, 0xe4, 0x3c, 0x87, 0x8b, 0x95, 0x21,
	0x4b, 0x6e, 0x52, 0x41, 0x5f, 0x3b, 0xea, 0x2d, 0xde, 0x01, 0x03, 0xf0, 0xc8, 0x49, 0x0e, 0x0b,
	0x26, 0xe3, 0x80, 0x07, 0x7b, 0x01, 0x5c, 0x19, 0x2a, 0x87, 0xa6, 0xbe, 0xd3, 0x6d, 0x4f, 0xff,
	0x76, 0x3d, 0xc2, 0x79, 0x41, 0xa5, 0xfc, 0x3b, 0xe8, 0x06, 0x46, 0xae, 0xb4, 0xd9, 0xaf, 0x97,
	0x3a, 0xb9, 0x96, 0x8e, 0xea, 0x90, 0x3d, 0xee, 0xfd, 0xfc, 0x27, 0x82, 0x89, 0x93, 0xef, 0x64,
	0xbe, 0x55, 0x4d, 0xf8, 0x06, 0x70, 0xa0, 0xc4, 0xa9, 0xcf, 0x87, 0xbb, 0xce, 0xc4, 0xde, 0x0f,
	0xf7, 0x79, 0x85, 0x6c, 0x60, 0xc0, 0x6b, 0x9f, 0x0a, 0xf8, 0x67, 0xd3, 0xd0, 0xf6, 0xad, 0xcb,
	0xec, 0x23, 0xf5, 0x47, 0xad, 0x52, 0x3e, 0xe8, 0xf3, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x60,
	0xeb, 0x70, 0x9d, 0xe5, 0x01, 0x00, 0x00,
}
